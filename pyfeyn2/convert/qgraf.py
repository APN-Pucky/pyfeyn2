def get_style() -> str:
    """Get the style for qgraf to produce feynml."""
    return r"""
<prologue>
<<!--
 file generated by <program>

<command_loop><command_line_loop> <command_data><end><end>

 You must add x= and y= with suitable vertex positions.
 Some lines may need manual bending to render properly.
-->>
<<feynml>>
<diagram>
  <back>
 <<diagram 
          id="Diagram<diagram_index>"
 >>

<vertex_loop> 
  <<vertex
        id="Vert<vertex_index>" 
  />>
<end>

<in_loop>
  <<leg  
        type="<field>"
        sense="incoming" 
        target="Vert<vertex_index>"
        id="In<in_index>" 
  />>
<end>

<out_loop> 
  <<leg  
        type="<field>"
        sense="outgoing" 
        target="Vert<vertex_index>" 
        id="Out<out_index>" 
  />>
<end>

<propagator_loop> 
  <<propagator  
               type="<field>"  
               source="Vert<dual-vertex_index>" 
               target="Vert<vertex_index>" 
               id="Prop<propagator_index>" 
  />>
<end>

 <</diagram>>
<epilogue>
<</feynml>>

<<!-- end -->>
<exit>
	"""


def get_example_model() -> str:
    """Get an example model for qgraf."""
    return r"""
* QGRAF-3 Model Definition

* PROPOGATOR DEFINITIONS 
[gluon,gluon,+]
[photon,photon,+]
[fermion,antifermion,+]

* VERTEX DEFINITIONS 
[fermion,antifermion,gluon]
[fermion,antifermion,photon]
[gluon,gluon,gluon,gluon]
[gluon,gluon,gluon]
* YOU HAVE REACHED THE END MY FRIEND
"""


def get_example_process() -> str:
    """Get an example process for qgraf."""
    return r"""
 output= 'qlist' ;
 style= 'feynml.sty' ;
 model = 'my_sm';
 in= fermion[p1], fermion[p2];
 out= fermion[k1], fermion[k2];
 loops= 0;
 loop_momentum= l;
 options= notadpole, onshell;
"""
