{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a6393fc9",
   "metadata": {},
   "source": [
    "# triangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "24473f51",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tikz:\n",
      "tikz failed:\n",
      "Traceback (most recent call last):\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/all.py\", line 109, in render\n",
      "    render(fd).render(dirpath + \"/\" + name + \".pdf\", **dynarg)\n",
      "    ^^^^^^^^^^\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/latex/tikzfeynman.py\", line 237, in __init__\n",
      "    self.set_feynman_diagram(fd)\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/latex/tikzfeynman.py\", line 241, in set_feynman_diagram\n",
      "    self.set_src_diag(NoEscape(feynman_to_tikz_feynman(fd)))\n",
      "                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/latex/tikzfeynman.py\", line 185, in feynman_to_tikz_feynman\n",
      "    src += stylize_node(fd, v)\n",
      "           ^^^^^^^^^^^^^^^^^^^\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/latex/tikzfeynman.py\", line 135, in stylize_node\n",
      "    ret += shape_map[style.getProperty(\"symbol\").value] + \",\"\n",
      "           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "KeyError: 'triangle'\n",
      "\n",
      "pyx:\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAJ0AAACdCAQAAAAEL7JdAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAlwSFlzAAAAyAAAAMgAY/rnrQAAAAd0SU1FB+cLBAw5L5NoblsAAAMpSURBVHja7d3LedRAFITREh8JsCMIdiTAAlKZCYJI8NpZOAZicQhiYcDz0KOlkfTf6r51E6g6AXR3vTJL033Si75+oGv45Q1Ov5NuYf7B6UfSLco7XP+adAtyCSclXXGu4ZKuOLdwSVeYe7ikK8oQXNIVZBgu6WYzBpd0MxmHS7rJTMEl3USm4ZJuNHNwSTeSebikG0wJXNINpAwu6e5SCpd0NymHS7qrLIFLuossg0u6/1kKl3R/sxwu6SStg0s6rYVLutVwzdOth2uc7hG4pukeg2uY7lG4Zukeh2uUbgu4Jum2gWuQbiu45ui2g2uMbku4pui2hWuIbmu4Zui2h2uEbg+4Juj2gWuAbi+46un2g6ucbk+4qun2hauYbm+4aun2h6uU7gi4KumOgauQ7ii46uiOg6uM7ki4quiOhauI7mi4auiOh6uEjoCrgo6Bq4COgrOn4+DM6Ug4azoWzpiOhrOl4+FM6SLAWdLFgDOkiwJnRxcHzowuEpwVXSw4I7pocDZ08eBM6CLCWdDFhDOgiwoXni4uXHC6yHBSpxe6wkS+6HNUOOmjvtMVJvIq6TkmnNSFpvumn5LO/RNdZDB96NNJvXqd6B6D3egCvnh4AV88vIAvHl7AFw8v4IuHF/DFwwv44uEFfPHwAr54eAFfPBzCFw9n8MXDEXzxcAJfPBzAFw+f74uHj/fFw6f74uHDffHw2b54+GhfPHyyLx4+2BcPn+uLh4/1xcOn+uLhQ33x8Jm+ePhIXzx8oi8ePtAXD5/ni4eP88XDp/ni4cN88fBZvnj4KF88fJIvHj7IFw+f44uHj/HFw6f44uFDfPHwGb54+AhfPHyCLx4+wBcPr++Lh5enbz0eXp2/tXh48Qi3Dg+vHePW4OGlo9xyPLxynFuKhxeOdMvw8LqxbgkeXjbalePhVeNdKR5eNOKV4eE1Y14JHl4y6s3j4RXj3hweXjDyTePh9WLfFB5eLvqN4+HV4t8YHl7M4Ybx8FoeN4SHl3K5ezy8ks/d4uGFnO4aD6/jdZd4eBm3e8frevo5brt0J/2SdE66FXnDC/3fRNT0TzpLfwDc+x6Gg8y8XgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0xMS0wNFQxMjo1Nzo0NyswMDowMHxl71kAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMTEtMDRUMTI6NTc6NDcrMDA6MDANOFflAAAAKHRFWHRkYXRlOnRpbWVzdGFtcAAyMDIzLTExLTA0VDEyOjU3OjQ3KzAwOjAwWi12OgAAADh0RVh0cGRmOkhpUmVzQm91bmRpbmdCb3gANTYuNjkyOXg1Ni42OTI5LTI4LjM0NjQ1Ny0yOC4zNDY0NTcq/djzAAAAE3RFWHRwZGY6VmVyc2lvbgBQREYtMS40JDFqVwAAAEp0RVh0c2lnbmF0dXJlADE2MjE5N2Q5OWE0ZTNjNmZlNTVlNDFiMjNlMWRlMTFlZDAyYjY1NTYyMTI2YjdhYzlkYmNhODUyZTczZDgyNTOBnSfLAAAAAElFTkSuQmCC",
      "text/plain": [
       "<wand.image.Image: 162197d 'PDF' (157x157)>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "feynmp:\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<wand.image.Image: d01b8ee 'PDF' (180x111)>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "feynman:\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dot:\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<wand.image.Image: f73aae2 'PDF' (296x251)>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "asciipdf:\n",
      "asciipdf failed:\n",
      "Traceback (most recent call last):\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/all.py\", line 109, in render\n",
      "    render(fd).render(dirpath + \"/\" + name + \".pdf\", **dynarg)\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/text/asciipdf.py\", line 25, in render\n",
      "    ASCIIRender.render(\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/text/ascii.py\", line 309, in render\n",
      "    self.namedshapes[ssss.getProperty(\"symbol\").value].draw(\n",
      "    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "KeyError: 'triangle'\n",
      "\n",
      "unicodepdf:\n",
      "unicodepdf failed:\n",
      "Traceback (most recent call last):\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/all.py\", line 109, in render\n",
      "    render(fd).render(dirpath + \"/\" + name + \".pdf\", **dynarg)\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/text/unicodepdf.py\", line 64, in render\n",
      "    UnicodeRender.render(\n",
      "  File \"/home/apn/git/pyfeyn2/pyfeyn2/render/text/ascii.py\", line 309, in render\n",
      "    self.namedshapes[ssss.getProperty(\"symbol\").value].draw(\n",
      "    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "KeyError: 'triangle'\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from pyfeyn2.render.all import AllRender\n",
    "ar = AllRender().demo_vertex(\"triangle\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b444f3e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
